{"version":3,"file":"static/js/985.7f530028.chunk.js","mappings":"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","sources":["hooks/useIsMobile.tsx","data/locationPath.ts","data/documentTitle.ts","hooks/useSelectItem.tsx","components/layout/storeBackendStyle.ts","components/layout/storeBackend.tsx","components/common/list/navList.tsx","data/navButtons.tsx","components/storeBackend/bottomNavigation/bottomNavigation.tsx","components/common/drawer/drawer.tsx","data/navSlideConfig.tsx","components/storeBackend/slide/slide.tsx","components/storeBackend/main/main.tsx","hooks/usePopoverAnchor.tsx","components/common/popover/notifsPopover.tsx","components/common/card/notifsCard.tsx","components/storeBackend/header/headerStyle.ts","components/storeBackend/header/header.tsx","pages/storeBackend.tsx","hooks/useLoginForm.tsx"],"sourcesContent":["// hooks\r\nimport { useMediaQuery, useTheme } from \"@mui/material\"\r\n\r\n// type\r\nimport { Breakpoint } from \"@mui/material\"\r\n\r\nconst useIsMobile = (breakpoints: Breakpoint) => {\r\n\r\n    const theme = useTheme();\r\n    const isMobile = useMediaQuery(theme.breakpoints.down(breakpoints))\r\n\r\n    return { isMobile }\r\n}\r\n\r\nexport default useIsMobile","export const pathToItemMap: Record<string, string> = {\r\n    '/store-backend': 'store-ops-home',\r\n    '/store-backend/products': 'store-ops-products',\r\n    '/store-backend/orders': 'store-ops-orders',\r\n    '/store-backend/customers': 'store-ops-customers',\r\n    '/store-backend/setting': 'setting-ops-setting',\r\n    '/store-backend/setting/user': 'setting-ops-user',\r\n    '/store-backend/setting/system': 'setting-ops-system'\r\n}\r\n\r\nexport const itemToPathMap: Record<string, string> = {\r\n    'store-ops-home': '/store-backend',\r\n    'store-ops-products': '/store-backend/products',\r\n    'store-ops-orders': '/store-backend/orders',\r\n    'store-ops-customers': '/store-backend/customers',\r\n    'setting-ops-setting': '/store-backend/setting',\r\n    'setting-ops-user': '/store-backend/setting/user',\r\n    'setting-ops-system': '/store-backend/setting/system'\r\n}","export const documentTitle: Record<string, string> = {\r\n    \"store-ops-home\": \"Store Backend\",\r\n    \"store-ops-products\": \"Store Backend - products\",\r\n    'store-ops-orders': 'Store Backend - orders',\r\n    \"store-ops-customers\": \"Store Backend - customers\",\r\n    \"setting-ops-setting\": \"Store Backend - setting\",\r\n    'setting-ops-user': 'Store Backend - user',\r\n    'setting-ops-system': 'Store Backend - system'\r\n}","// hooks\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\n// data\r\nimport { pathToItemMap, itemToPathMap } from \"../data/locationPath\";\r\nimport { documentTitle } from \"../data/documentTitle\";\r\n\r\nconst useSelectItem = () => {\r\n\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n\r\n    const [selectedItem, setSelectedItem] = useState<string>('')\r\n    const [drawerControl, setDrawerControl] = useState<boolean>(false)\r\n\r\n    const handleSelect = (value: string) => {\r\n        setSelectedItem(value)\r\n        const targetPath = itemToPathMap[value]\r\n        if (targetPath) navigate(targetPath)\r\n    }\r\n\r\n    const handleChange = (event: React.SyntheticEvent, newValue: string) => {\r\n        setSelectedItem(newValue)\r\n        const targetPath = itemToPathMap[newValue]\r\n        if (targetPath) navigate(targetPath)\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setDrawerControl(prev => !prev)\r\n    };\r\n\r\n    // add more btn and close menu\r\n    useEffect(() => {\r\n        if (selectedItem !== 'more') {\r\n            setDrawerControl(false)\r\n        }\r\n    }, [selectedItem])\r\n\r\n    // document title\r\n    useEffect(() => {\r\n        const title = documentTitle[selectedItem] || 'Store Backend'\r\n        document.title = title\r\n    }, [selectedItem])\r\n\r\n    useEffect(() => {\r\n        const current = pathToItemMap[location.pathname]\r\n        if (current) setSelectedItem(current)\r\n    }, [location.pathname])\r\n\r\n    return {\r\n        selectedItem,\r\n        setSelectedItem,\r\n        handleSelect,\r\n        handleChange,\r\n        drawerControl,\r\n        setDrawerControl,\r\n        handleClose\r\n    }\r\n}\r\n\r\nexport default useSelectItem","export const layoutStyle = { display: 'flex', flexDirection: 'column', height: 'calc(var(--vh, 1vh) * 100)' }\r\nexport const containerStyle = { flex: 1 }\r\nexport const headerStyle = { height: '70px' }\r\nexport const slideStyle = { maxHeight: 'calc(100vh - 80px)' }\r\nexport const mainStyle = { maxHeight: 'calc(100vh - 80px)' }\r\n\r\n// RWD\r\nexport const slideGridStyle = {\r\n    ...slideStyle,\r\n    minHeight: { xs: '60px', md: 'calc(100vh - 80px)' }\r\n};\r\n\r\nexport const mainGridStyle = {\r\n    ...mainStyle,\r\n    minHeight: { xs: 'calc(100vh - 146px)', md: 'calc(100vh - 80px)' }\r\n};","// components\r\nimport { Box, Grid } from '@mui/material';\r\n\r\n// style\r\nimport { layoutStyle, containerStyle, headerStyle, slideGridStyle, mainGridStyle } from './storeBackendStyle';\r\n\r\n// type\r\nimport { StoreBackendLayoutProp } from './storeBackend.type';\r\n\r\nconst StoreBackendLayout: React.FC<StoreBackendLayoutProp> = (props) => {\r\n\r\n    const { header, slide, main } = props\r\n\r\n    return (\r\n        <Box sx={layoutStyle} component=\"main\">\r\n            <Grid container rowSpacing={1} columnSpacing={1} sx={containerStyle}>\r\n                <Grid size={12} sx={headerStyle}>\r\n                    {header}\r\n                </Grid>\r\n                <Grid\r\n                    size={{ xl: 2, md: 4, xs: 12 }}\r\n                    order={{ md: 1, xs: 2 }}\r\n                    sx={slideGridStyle}\r\n                >\r\n                    {slide}\r\n                </Grid>\r\n                <Grid\r\n                    size={{ xl: 10, md: 8, xs: 12 }}\r\n                    sx={mainGridStyle}\r\n                    order={{ md: 2, xs: 1 }}\r\n                >\r\n                    {main}\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default StoreBackendLayout","// components\r\nimport {\r\n    List,\r\n    ListSubheader,\r\n    ListItemButton,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Collapse\r\n} from \"@mui/material\"\r\n\r\n// icons\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\n// type\r\nimport { NavListsProp } from \"./navList.type\";\r\n\r\n// hooks\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst NavList: React.FC<NavListsProp> = (props) => {\r\n\r\n    const { t } = useTranslation()\r\n\r\n    const {\r\n        title,\r\n        list,\r\n        selected,\r\n        handleListBtn\r\n    } = props\r\n\r\n    return (\r\n        <List\r\n            component=\"nav\"\r\n            subheader={\r\n                <ListSubheader component=\"div\">\r\n                    {t(title)}\r\n                </ListSubheader>\r\n            }\r\n            sx={{ width: '100vw' }}\r\n        >\r\n            {list && list.map(({ icon, text, submodule, value }) => {\r\n                return (\r\n                    <div key={value}>\r\n                        <ListItemButton\r\n                            selected={selected === value}\r\n                            onClick={() => handleListBtn?.(value!)}\r\n                        >\r\n                            <ListItemIcon>\r\n                                {icon}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t(text)} />\r\n                            {submodule && (selected === value ? <ExpandLessIcon /> : <ExpandMoreIcon />)}\r\n                        </ListItemButton>\r\n                        {submodule &&\r\n                            (\r\n                                <Collapse in={selected === value} timeout=\"auto\" unmountOnExit>\r\n                                    <List component=\"div\" disablePadding>\r\n                                        {submodule.map((item, index) => {\r\n                                            return (\r\n                                                <ListItemButton sx={{ pl: 4 }} key={index}>\r\n                                                    <ListItemText primary={item} />\r\n                                                </ListItemButton>\r\n                                            )\r\n                                        })}\r\n                                    </List>\r\n                                </Collapse>\r\n                            )\r\n                        }\r\n                    </div>\r\n                )\r\n            })}\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default NavList","// icons\r\nimport HomeFilledIcon from '@mui/icons-material/HomeFilled';\r\nimport LocalOfferTwoToneIcon from '@mui/icons-material/LocalOfferTwoTone';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\n\r\nexport const navButtons = [\r\n    {\r\n        label: \"Home\",\r\n        value: \"store-ops-home\",\r\n        icon: < HomeFilledIcon />\r\n    },\r\n    {\r\n        label: \"Orders\",\r\n        value: \"store-ops-orders\",\r\n        icon: < LocalOfferTwoToneIcon />\r\n    },\r\n    {\r\n        label: \"More\",\r\n        value: \"more\",\r\n        icon: < MoreHorizIcon />,\r\n    }\r\n]","// components\r\nimport { BottomNavigation, BottomNavigationAction } from '@mui/material';\r\n\r\n// type\r\nimport { BottomNavProp } from './bottomNavigation.type';\r\n\r\n// data\r\nimport { navButtons } from '../../../data/navButtons';\r\n\r\nconst BottomNav: React.FC<BottomNavProp> = (props) => {\r\n\r\n    const {\r\n        value,\r\n        onChange,\r\n        sx,\r\n        handleOnClose\r\n    } = props\r\n\r\n    return (\r\n        <BottomNavigation\r\n            showLabels\r\n            value={value}\r\n            onChange={onChange}\r\n            sx={sx}\r\n        >\r\n            {navButtons.map((item) =>\r\n            (\r\n                <BottomNavigationAction\r\n                    key={item.label}\r\n                    label={item.label}\r\n                    value={item.value}\r\n                    icon={item.icon}\r\n                    onClick={item.value === 'more' ? handleOnClose : undefined}\r\n                />\r\n            )\r\n            )}\r\n        </BottomNavigation>\r\n    )\r\n}\r\n\r\nexport default BottomNav","// components\r\nimport { Drawer } from \"@mui/material\"\r\n\r\n// type\r\nimport { menuDrawerProp } from \"./drawer.type\"\r\n\r\nconst MenuDrawer: React.FC<menuDrawerProp> = (props) => {\r\n\r\n    const {\r\n        anchor = 'left',\r\n        open,\r\n        onClose,\r\n        children,\r\n    } = props\r\n\r\n    return (\r\n        <Drawer anchor={anchor} open={open} onClose={onClose}>\r\n            {children}\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default MenuDrawer","// icons\r\nimport HomeFilledIcon from '@mui/icons-material/HomeFilled';\r\nimport InventoryTwoToneIcon from '@mui/icons-material/InventoryTwoTone';\r\nimport SupervisorAccountTwoToneIcon from '@mui/icons-material/SupervisorAccountTwoTone';\r\nimport LocalOfferTwoToneIcon from '@mui/icons-material/LocalOfferTwoTone';\r\nimport SettingsTwoToneIcon from '@mui/icons-material/SettingsTwoTone';\r\n\r\nexport const navSlideConfig = {\r\n    \"store-ops\": {\r\n        title: \"store_operation_module\",\r\n        list: [\r\n            {\r\n                icon: <HomeFilledIcon />,\r\n                text: 'dashboard',\r\n                value: 'store-ops-home'\r\n            },\r\n            {\r\n                icon: <LocalOfferTwoToneIcon />,\r\n                text: 'product_management',\r\n                value: 'store-ops-products'\r\n            },\r\n            {\r\n                icon: <InventoryTwoToneIcon />,\r\n                text: 'order_management',\r\n                value: 'store-ops-orders'\r\n            },\r\n            {\r\n                icon: <SupervisorAccountTwoToneIcon />,\r\n                text: 'customer_management',\r\n                value: \"store-ops-customers\"\r\n            }\r\n        ]\r\n    },\r\n    \"setting-ops\": {\r\n        title: \"setting_module\",\r\n        list: [\r\n            {\r\n                icon: <SettingsTwoToneIcon />,\r\n                text: 'settings',\r\n                value: 'setting-ops-setting'\r\n            }\r\n        ]\r\n    }\r\n}","// hooks\r\nimport useIsMobile from '../../../hooks/useIsMobile';\r\n\r\n// components\r\nimport { Card, Box, Paper } from '@mui/material';\r\nimport NavList from '../../../components/common/list/navList'\r\nimport BottomNav from '../bottomNavigation/bottomNavigation';\r\nimport MenuDrawer from '../../common/drawer/drawer';\r\n\r\n// data\r\nimport { navSlideConfig } from \"../../../data/navSlideConfig\";\r\n\r\n// type\r\nimport { slideProps } from './slide.type';\r\n\r\nconst Slide: React.FC<slideProps> = (props) => {\r\n\r\n    const {\r\n        selected,\r\n        handleListBtn,\r\n        onChange,\r\n        drawerControl,\r\n        BottomNavHandleOnClose\r\n    } = props\r\n\r\n    const { isMobile } = useIsMobile('md')\r\n\r\n    if (isMobile) {\r\n        return (\r\n            <>\r\n                <Card raised>\r\n                    <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>\r\n                        <BottomNav\r\n                            value={selected}\r\n                            onChange={onChange}\r\n                            handleOnClose={BottomNavHandleOnClose}\r\n                            sx={{ zIndex: 2000 }}\r\n                        />\r\n                    </Paper>\r\n                    <MenuDrawer\r\n                        anchor='right'\r\n                        open={drawerControl}\r\n                    >\r\n                        {Object.entries(navSlideConfig).map(([key, config]) => {\r\n                            return (\r\n                                <NavList\r\n                                    key={key}\r\n                                    title={config.title}\r\n                                    list={config.list}\r\n                                    selected={selected}\r\n                                    handleListBtn={handleListBtn}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </MenuDrawer>\r\n                </Card>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            component='aside'\r\n            sx={{\r\n                height: 'calc( 100% - 10px)'\r\n            }}\r\n        >\r\n            <Card\r\n                raised\r\n                sx={{\r\n                    height: '100%'\r\n                }}\r\n            >\r\n                {Object.entries(navSlideConfig).map(([key, config]) => {\r\n                    return (\r\n                        <NavList\r\n                            key={key}\r\n                            title={config.title}\r\n                            list={config.list}\r\n                            selected={selected}\r\n                            handleListBtn={handleListBtn}\r\n                        />\r\n                    )\r\n                })}\r\n            </Card>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Slide","// components\r\nimport { Card } from \"@mui/material\"\r\n\r\n// type\r\nimport { mainProps } from \"./main.type\"\r\n\r\nconst Main: React.FC<mainProps> = (props) => {\r\n\r\n    const { children } = props\r\n\r\n    return (\r\n        <Card\r\n            raised\r\n            sx={{ height: 'calc( 100% - 10px )', overflowY: 'auto' }}\r\n        >\r\n            {children}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Main","import { useState } from \"react\"\r\n\r\nconst usePopoverAnchor = () => {\r\n\r\n    const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\r\n\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return {\r\n        anchorEl,\r\n        setAnchorEl,\r\n        handleClick,\r\n        handleClose,\r\n        open\r\n    }\r\n}\r\n\r\nexport default usePopoverAnchor","// components\r\nimport { Popover } from \"@mui/material\"\r\n\r\n// type\r\ninterface notifPopoverProps {\r\n    open: boolean\r\n    anchorEl?: any\r\n    children?: React.ReactNode\r\n    onClose?: () => void\r\n}\r\n\r\nconst NotifsPopover: React.FC<notifPopoverProps> = (props) => {\r\n\r\n    const {\r\n        open,\r\n        anchorEl,\r\n        children,\r\n        onClose\r\n    } = props\r\n\r\n    return (\r\n        <Popover\r\n            open={open}\r\n            onClose={onClose}\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            sx={{\r\n                top: 6\r\n            }}\r\n        >\r\n            {children}\r\n        </Popover>\r\n    )\r\n}\r\n\r\nexport default NotifsPopover","// components\r\nimport { Card, CardHeader, CardContent, Typography, Divider } from \"@mui/material\"\r\n\r\n// hooks\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\nconst NotifsCard = () => {\r\n\r\n    const { t } = useTranslation()\r\n\r\n    return (\r\n        <Card sx={{ width: 250 }}>\r\n            <CardHeader\r\n                title={\r\n                    <Typography variant=\"h6\">{t('notification')}</Typography>\r\n                }\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n                <p>你有一筆新訂單</p>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default NotifsCard","export const headerStyle = { flexGrow: 1 }\r\nexport const headerLogoStyle = { height: 50, maxWidth: 160, }\r\nexport const headerInfoAreaStyle = { display: 'flex', alignItems: 'center', gap: 1 }","// hooks\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport usePopoverAnchor from \"../../../hooks/usePopoverAnchor\";\r\nimport useLoginForm from \"../../../hooks/useLoginForm\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n// components\r\nimport {\r\n    Box,\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    Button,\r\n    Badge\r\n} from \"@mui/material\"\r\nimport NotifsPopover from \"../../common/popover/notifsPopover\";\r\nimport NotifsCard from \"../../common/card/notifsCard\";\r\n\r\n// icon\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\n\r\n// img\r\nimport Logo from '../../../assets/img/Store_Backend_Logo.png'\r\n\r\n// style\r\nimport { headerLogoStyle, headerStyle, headerInfoAreaStyle } from \"./headerStyle\";\r\n\r\nconst Header = () => {\r\n\r\n    const { t } = useTranslation()\r\n    const { anchorEl, handleClick, handleClose, open } = usePopoverAnchor()\r\n\r\n    const navigate = useNavigate()\r\n    const { handleSignOut, loading } = useLoginForm()\r\n\r\n    return (\r\n        <Box>\r\n            <AppBar color='default'>\r\n                <Toolbar >\r\n                    {/* Logo */}\r\n                    <Box sx={headerStyle}>\r\n                        <Box\r\n                            component=\"img\"\r\n                            src={Logo}\r\n                            alt=\"Store Backend Logo\"\r\n                            sx={headerLogoStyle}\r\n                        />\r\n                    </Box>\r\n\r\n                    {/* InfoArea */}\r\n                    <Box sx={headerInfoAreaStyle}>\r\n                        <IconButton\r\n                            aria-label=\"notifications\"\r\n                            onClick={handleClick}\r\n                        >\r\n                            <Badge variant=\"dot\" invisible={false} color=\"error\">\r\n                                <NotificationsIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <Button\r\n                            variant='text'\r\n                            color=\"primary\"\r\n                            loading={loading}\r\n                            onClick={() => handleSignOut(\r\n                                () => {\r\n                                    navigate('/')\r\n                                }\r\n                            )}\r\n                        >\r\n                            {t('sign_out')}\r\n                        </Button>\r\n                    </Box>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            {/* NotifsPopover */}\r\n            <NotifsPopover\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n            >\r\n                <NotifsCard />\r\n            </NotifsPopover>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Header","import { Outlet } from \"react-router-dom\";\r\n\r\n// hooks\r\nimport useSelectItem from \"../hooks/useSelectItem\";\r\n\r\n// layout\r\nimport StoreBackendLayout from \"../components/layout/storeBackend\";\r\nimport Slide from \"../components/storeBackend/slide/slide\";\r\nimport Main from \"../components/storeBackend/main/main\";\r\n\r\n// components\r\nimport { Box } from \"@mui/material\";\r\nimport Header from \"../components/storeBackend/header/header\";\r\n\r\nconst StoreBackend = () => {\r\n\r\n    const {\r\n        selectedItem,\r\n        handleSelect,\r\n        handleChange,\r\n        handleClose,\r\n        drawerControl\r\n    } = useSelectItem()\r\n\r\n    return (\r\n        <StoreBackendLayout\r\n            header={<Header />}\r\n            slide={\r\n                <Slide\r\n                    selected={selectedItem}\r\n                    handleListBtn={handleSelect}\r\n                    onChange={handleChange}\r\n                    drawerControl={drawerControl}\r\n                    BottomNavHandleOnClose={handleClose}\r\n                />\r\n            }\r\n            main={\r\n                <Main>\r\n                    <Box padding={3}>\r\n                        <Outlet />\r\n                    </Box>\r\n                </Main>\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default StoreBackend;\r\n","import { useState } from \"react\"\r\n\r\nconst useLoginForm = () => {\r\n\r\n    const [userName, setUserName] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n\r\n    const time = 1000\r\n\r\n    const handleLogin = (\r\n        onError: (msg: string | null) => void,\r\n        onSuccess?: () => void\r\n    ) => {\r\n\r\n        if (!userName || !password) {\r\n            onError('userName OR password is WRONG!!')\r\n            return\r\n        }\r\n\r\n        setLoading(true)\r\n        setTimeout(() => {\r\n            console.log(`${userName}\\n${password}`) // debug log\r\n            setUserName('')\r\n            setPassword('')\r\n            setLoading(false)\r\n            onSuccess && onSuccess()\r\n        }, time)\r\n\r\n    }\r\n\r\n    const handleSignOut = (\r\n        onSuccess?: () => void\r\n    ) => {\r\n\r\n        setLoading(true)\r\n        setTimeout(() => {\r\n            onSuccess && onSuccess()\r\n            setLoading(false)\r\n        }, time)\r\n    }\r\n\r\n    return {\r\n        userName,\r\n        password,\r\n        loading,\r\n        setUserName,\r\n        setPassword,\r\n        handleLogin,\r\n        handleSignOut\r\n    }\r\n}\r\n\r\nexport default useLoginForm"],"names":["breakpoints","theme","useTheme","isMobile","useMediaQuery","down","pathToItemMap","itemToPathMap","documentTitle","useSelectItem","location","useLocation","navigate","useNavigate","selectedItem","setSelectedItem","useState","drawerControl","setDrawerControl","useEffect","title","document","current","pathname","handleSelect","value","targetPath","handleChange","event","newValue","handleClose","prev","layoutStyle","display","flexDirection","height","containerStyle","flex","headerStyle","slideGridStyle","_objectSpread","maxHeight","minHeight","xs","md","mainGridStyle","props","header","slide","main","_jsx","Box","sx","component","children","_jsxs","Grid","container","rowSpacing","columnSpacing","size","xl","order","t","useTranslation","list","selected","handleListBtn","List","subheader","ListSubheader","width","map","_ref","icon","text","submodule","ListItemButton","onClick","ListItemIcon","ListItemText","primary","ExpandLessIcon","ExpandMoreIcon","Collapse","in","timeout","unmountOnExit","disablePadding","item","index","pl","navButtons","label","HomeFilledIcon","LocalOfferTwoToneIcon","MoreHorizIcon","onChange","handleOnClose","BottomNavigation","showLabels","BottomNavigationAction","undefined","anchor","open","onClose","Drawer","navSlideConfig","InventoryTwoToneIcon","SupervisorAccountTwoToneIcon","SettingsTwoToneIcon","BottomNavHandleOnClose","useIsMobile","_Fragment","Card","raised","Paper","position","bottom","left","right","elevation","BottomNav","zIndex","MenuDrawer","Object","entries","key","config","NavList","_ref2","overflowY","usePopoverAnchor","anchorEl","setAnchorEl","Boolean","handleClick","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","top","NotifsCard","CardHeader","Typography","variant","Divider","CardContent","flexGrow","headerLogoStyle","maxWidth","headerInfoAreaStyle","alignItems","gap","Header","handleSignOut","loading","useLoginForm","AppBar","color","Toolbar","src","Logo","alt","IconButton","Badge","invisible","NotificationsIcon","Button","NotifsPopover","StoreBackend","StoreBackendLayout","Slide","Main","padding","Outlet","userName","setUserName","password","setPassword","setLoading","handleLogin","onError","onSuccess","setTimeout","console","log","concat"],"sourceRoot":""}