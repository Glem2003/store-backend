{"version":3,"file":"static/js/926.c83b9402.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/Card/cardClasses.js","../node_modules/@mui/material/esm/Card/Card.js","../node_modules/@mui/material/esm/CardActionArea/cardActionAreaClasses.js","../node_modules/@mui/material/esm/CardActionArea/CardActionArea.js","pages/setting.tsx","data/locationPath.ts","data/documentTitle.ts","hooks/useSelectItem.tsx","../node_modules/@mui/material/esm/CardContent/cardContentClasses.js","../node_modules/@mui/material/esm/CardContent/CardContent.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root'\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionAreaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActionArea', slot);\n}\nconst cardActionAreaClasses = generateUtilityClasses('MuiCardActionArea', ['root', 'focusVisible', 'focusHighlight']);\nexport default cardActionAreaClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport cardActionAreaClasses, { getCardActionAreaUtilityClass } from \"./cardActionAreaClasses.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    focusHighlight: ['focusHighlight']\n  };\n  return composeClasses(slots, getCardActionAreaUtilityClass, classes);\n};\nconst CardActionAreaRoot = styled(ButtonBase, {\n  name: 'MuiCardActionArea',\n  slot: 'Root'\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'block',\n  textAlign: 'inherit',\n  borderRadius: 'inherit',\n  // for Safari to work https://github.com/mui/material-ui/issues/36285.\n  width: '100%',\n  [`&:hover .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.hoverOpacity,\n    '@media (hover: none)': {\n      opacity: 0\n    }\n  },\n  [`&.${cardActionAreaClasses.focusVisible} .${cardActionAreaClasses.focusHighlight}`]: {\n    opacity: (theme.vars || theme).palette.action.focusOpacity\n  }\n})));\nconst CardActionAreaFocusHighlight = styled('span', {\n  name: 'MuiCardActionArea',\n  slot: 'FocusHighlight'\n})(memoTheme(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit',\n  opacity: 0,\n  backgroundColor: 'currentcolor',\n  transition: theme.transitions.create('opacity', {\n    duration: theme.transitions.duration.short\n  })\n})));\nconst CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardActionArea'\n  });\n  const {\n    children,\n    className,\n    focusVisibleClassName,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps\n  };\n  const [RootSlot, rootProps] = useSlot('root', {\n    elementType: CardActionAreaRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other\n    },\n    shouldForwardComponentProp: true,\n    ownerState,\n    ref,\n    className: clsx(classes.root, className),\n    additionalProps: {\n      focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible)\n    }\n  });\n  const [FocusHighlightSlot, focusHighlightProps] = useSlot('focusHighlight', {\n    elementType: CardActionAreaFocusHighlight,\n    externalForwardedProps,\n    ownerState,\n    ref,\n    className: classes.focusHighlight\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootProps,\n    children: [children, /*#__PURE__*/_jsx(FocusHighlightSlot, {\n      ...focusHighlightProps\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    focusHighlight: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    focusHighlight: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActionArea;","// components\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    CardActionArea,\r\n    Grid\r\n} from \"@mui/material\"\r\n\r\n// hooks\r\nimport { useTranslation } from \"react-i18next\"\r\nimport useSelectItem from \"../hooks/useSelectItem\"\r\n\r\nconst Setting = () => {\r\n\r\n    const { t } = useTranslation()\r\n    const { handleSelect } = useSelectItem()\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n\r\n            <Grid size={6}>\r\n                <Card>\r\n                    <CardActionArea onClick={() => handleSelect('setting-ops-user')}>\r\n                        <CardContent>\r\n                            <Typography>{t('account_settings')}</Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid size={6}>\r\n                <Card>\r\n                    <CardActionArea onClick={() => handleSelect('setting-ops-system')}>\r\n                        <CardContent>\r\n                            <Typography>{t('system_settings')}</Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                </Card>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Setting","export const pathToItemMap: Record<string, string> = {\r\n    '/backend': 'store-ops-home',\r\n    '/backend/products': 'store-ops-products',\r\n    '/backend/orders': 'store-ops-orders',\r\n    '/backend/customers': 'store-ops-customers',\r\n    '/backend/setting': 'setting-ops-setting',\r\n    '/backend/setting/user': 'setting-ops-user',\r\n    '/backend/setting/system': 'setting-ops-system'\r\n}\r\n\r\nexport const itemToPathMap: Record<string, string> = {\r\n    'store-ops-home': '/backend',\r\n    'store-ops-products': '/backend/products',\r\n    'store-ops-orders': '/backend/orders',\r\n    'store-ops-customers': '/backend/customers',\r\n    'setting-ops-setting': '/backend/setting',\r\n    'setting-ops-user': '/backend/setting/user',\r\n    'setting-ops-system': '/backend/setting/system'\r\n}","export const documentTitle: Record<string, string> = {\r\n    \"store-ops-home\": \"Store Backend\",\r\n    \"store-ops-products\": \"Store Backend - products\",\r\n    'store-ops-orders': 'Store Backend - orders',\r\n    \"store-ops-customers\": \"Store Backend - customers\",\r\n    \"setting-ops-setting\": \"Store Backend - setting\",\r\n    'setting-ops-user': 'Store Backend - user',\r\n    'setting-ops-system': 'Store Backend - system'\r\n}","// hooks\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\n// data\r\nimport { pathToItemMap, itemToPathMap } from \"../data/locationPath\";\r\nimport { documentTitle } from \"../data/documentTitle\";\r\n\r\nconst useSelectItem = () => {\r\n\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n\r\n    const [selectedItem, setSelectedItem] = useState<string>('')\r\n    const [drawerControl, setDrawerControl] = useState<boolean>(false)\r\n\r\n    const handleSelect = (value: string) => {\r\n        setSelectedItem(value)\r\n        const targetPath = itemToPathMap[value]\r\n        if (targetPath) navigate(targetPath)\r\n    }\r\n\r\n    const handleChange = (event: React.SyntheticEvent, newValue: string) => {\r\n        setSelectedItem(newValue)\r\n        const targetPath = itemToPathMap[newValue]\r\n        if (targetPath) navigate(targetPath)\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setDrawerControl(prev => !prev)\r\n    };\r\n\r\n    // add more btn and close menu\r\n    useEffect(() => {\r\n        if (selectedItem !== 'more') {\r\n            setDrawerControl(false)\r\n        }\r\n    }, [selectedItem])\r\n\r\n    // document title\r\n    useEffect(() => {\r\n        const title = documentTitle[selectedItem] || 'Store Backend'\r\n        document.title = title\r\n    }, [selectedItem])\r\n\r\n    useEffect(() => {\r\n        const current = pathToItemMap[location.pathname]\r\n        if (current) setSelectedItem(current)\r\n    }, [location.pathname])\r\n\r\n    return {\r\n        selectedItem,\r\n        setSelectedItem,\r\n        handleSelect,\r\n        handleChange,\r\n        drawerControl,\r\n        setDrawerControl,\r\n        handleClose\r\n    }\r\n}\r\n\r\nexport default useSelectItem","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root'\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overflow","React","inProps","ref","props","useDefaultProps","className","raised","other","_objectWithoutProperties","ownerState","_objectSpread","classes","composeClasses","root","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardActionAreaUtilityClass","CardActionAreaRoot","ButtonBase","memoTheme","_ref","theme","display","textAlign","borderRadius","width","concat","cardActionAreaClasses","focusHighlight","opacity","vars","palette","action","hoverOpacity","focusVisible","focusOpacity","CardActionAreaFocusHighlight","_ref2","pointerEvents","position","top","right","bottom","left","backgroundColor","transition","transitions","create","duration","short","children","focusVisibleClassName","slots","slotProps","externalForwardedProps","RootSlot","rootProps","useSlot","elementType","shouldForwardComponentProp","additionalProps","FocusHighlightSlot","focusHighlightProps","_jsxs","Setting","t","useTranslation","handleSelect","useSelectItem","Grid","container","spacing","size","Card","CardActionArea","onClick","CardContent","Typography","pathToItemMap","itemToPathMap","documentTitle","location","useLocation","navigate","useNavigate","selectedItem","setSelectedItem","useState","drawerControl","setDrawerControl","useEffect","title","document","current","pathname","value","targetPath","handleChange","event","newValue","handleClose","prev","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as"],"sourceRoot":""}